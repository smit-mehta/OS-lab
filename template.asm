section .text
 BITS 32 
; shifting to real mode
	  mov byte [0x1009],0xbf
	  mov byte [0x100e],0x40
	   mov byte [0x1011],0xbf
	 mov byte [0x1016],0x40
	 mov ax,0x10
	  mov ds,ax
	  mov ss,ax
	  mov es,ax
	  mov gs,ax
	  mov fs,ax
	 jmp 0x8:cnk_next
 cnk_next:
	 mov eax,cr0
	 and eax,0xfffffffe
	  mov cr0,eax
; 1. Registers ..
	  mov ax,0xb00
	  mov ds,ax
	  mov ss,ax
	  mov es,ax
	  mov fs,ax
	  mov gs,ax
	  jmp 0xa00:0


 Chan_Start_Real: 
section .kama 
 BITS 32 
 code_base EQU 0xa000  
 ;Storing the Previous IDTR 
SIDT [0x2ff2] 
; IP = 0x0000
 ;Initializing Test Status Bytes 1 and 2 to 0xdead 
 mov word [0x2200], 0xdead; IP = 0x0007
 ;Initializing Exception Counter to 0x0000 
 mov word [0x2ff8], 0x0; IP = 0x0010
	LIDT [0x220A]; IP = 0x0019
 ; Initializing Flags
	 mov dword [0x1ff0], 0x0; IP = 0x0020
	 mov esp, 0x1ff0; IP = 0x002a
	 popfd ; IP = 0x002f
 start:
;---------------------YOUR CODE BEGINS HERE---------------------------------
; Note that CS points to 0xa000 and all other segment registers point to 0xb000
;-----------------------------------------------------------------------

error:
	jmp chanSad

exit1:
	jmp chanHappy

	



;--------------------YOUR CODE ENDS HERE----------------
 chanHappy:
;Comparing Exception counter with actual number of induced exceptions
	 clts; IP = 0x0718
	 mov word [0x2208],0xdece; IP = 0x071a
	 cmp word [0x2ff8], 0; IP = 0x0723
	jne near chanSad; IP = 0x072c
 HLT_L: mov word [0x2200], 0xbabe; IP = 0x072e
 Chan_End_Real:
;Start of X86 GDB specific section for displaying result on Postcard 
	 mov word [0x2208],0xcafe
	mov	al, 0xbb
	jmp	bulb
 chanSad:
	mov	al, 0xff
 bulb:
	mov	edx, 0x0080
	;out	dx, al
	mov	edx, 0x2fffff
 delay:
	dec	edx
	jnz	delay
;Restoring the previous IDTR 
	LIDT [0x2ff2]
;Restoring the Segment definitions specific to X86 GDBs  
;for proper execution of int 3 
	 mov ax,0
	 	 mov ds,ax
	     mov byte [0x1009],0xff
	     mov byte [0x100e],0x4f
	     mov byte [0x1011],0xff
	     mov byte [0x1016],0xcf
	 mov eax,cr0
	  or eax,0x1
	  mov cr0,eax
	  mov ax,0x10
	 mov ds,ax
	 mov ss,ax
	 mov es,ax
	 mov gs,ax
	 mov fs,ax
	 mov ESP, 0x8000
	 mov EBP, 0x9000
	 jmp 0x8:dword fin
 BITS 32
	 fin: clts
 int 3
 Chan_Test_End:
  align 0x1000
; ----------------------Your data here - 2 pages---------------------.

;---------Your Data ends here----------------

;-------------The OS kernel for your program starts here ---------------------
align 0x1000
; Chanix Control Page - should start at 0xc000

;Empty space in third page filled with Random data
 db 0x7e
 db 0x10
 db 0x1b
 db 0xee
 db 0x17
 db 0xf8
 db 0x8d
 db 0x50
 db 0xe
 db 0x12
 db 0x8e
 db 0x1a
 db 0x63
 db 0x9d
 db 0xd6
 db 0x74
 db 0x45
 db 0x1e
 db 0x3b
 db 0x72
 db 0x19
 db 0xac
 db 0xb
 db 0xbb
 db 0xce
 db 0xa0
 db 0xf6
 db 0xf8
 db 0x1b
 db 0x1e
 db 0xb1
 db 0x9a
 db 0x2e
 db 0xcc
 db 0x88
 db 0x45
 db 0xc5
 db 0x15
 db 0x96
 db 0xd3
 db 0x28
 db 0x24
 db 0xed
 db 0x8b
 db 0xc2
 db 0xc3
 db 0xff
 db 0x7
 db 0xe1
 db 0x3a
 db 0x79
 db 0xfb
 db 0xe7
 db 0x84
 db 0xb6
 db 0xb5
 db 0x24
 db 0xad
 db 0xad
 db 0x40
 db 0xcb
 db 0x5f
 db 0xda
 db 0xfa
 db 0x2b
 db 0x62
 db 0x3f
 db 0xf0
 db 0x78
 db 0xd5
 db 0xc3
 db 0xa0
 db 0xfa
 db 0xb0
 db 0x2b
 db 0xbc
 db 0x74
 db 0x2a
 db 0xc3
 db 0x55
 db 0x64
 db 0x3c
 db 0x50
 db 0x4b
 db 0xc0
 db 0x7
 db 0x0
 db 0xe4
 db 0xb4
 db 0xae
 db 0x24
 db 0x7f
 db 0xd
 db 0xfe
 db 0x79
 db 0x38
 db 0x61
 db 0xb9
 db 0x29
 db 0xd9
 db 0x8e
 db 0xec
 db 0x79
 db 0x88
 db 0x9d
 db 0xa4
 db 0x44
 db 0x11
 db 0xce
 db 0x7
 db 0x66
 db 0x32
 db 0x43
 db 0xb7
 db 0x7e
 db 0x3
 db 0xbe
 db 0x7e
 db 0xe8
 db 0x72
 db 0x2c
 db 0xc
 db 0xf1
 db 0x39
 db 0xb
 db 0x6b
 db 0x72
 db 0x6c
 db 0x24
 db 0x9b
 db 0x45
 db 0xb2
 db 0x87
 db 0xbe
 db 0x3b
 db 0x24
 db 0x62
 db 0x7f
 db 0x35
 db 0x30
 db 0x87
 db 0x9c
 db 0x62
 db 0xca
 db 0x53
 db 0xe0
 db 0xce
 db 0x11
 db 0x5f
 db 0xb6
 db 0x83
 db 0x8b
 db 0xc2
 db 0x74
 db 0xc5
 db 0xcd
 db 0xdf
 db 0x37
 db 0x39
 db 0x3
 db 0xd2
 db 0x7e
 db 0xb6
 db 0x59
 db 0x3c
 db 0xf1
 db 0x7e
 db 0x9e
 db 0x70
 db 0xb3
 db 0xce
 db 0xf7
 db 0x4f
 db 0x31
 db 0xc2
 db 0xa2
 db 0x11
 db 0x90
 db 0xb3
 db 0x70
 db 0x46
 db 0x36
 db 0xfc
 db 0x8
 db 0xab
 db 0xc1
 db 0xd6
 db 0x8a
 db 0xf8
 db 0xf
 db 0x8e
 db 0xca
 db 0x8e
 db 0x44
 db 0x23
 db 0xca
 db 0x35
 db 0xa1
 db 0x69
 db 0xa5
 db 0x55
 db 0x37
 db 0x9d
 db 0xa4
 db 0x68
 db 0x5f
 db 0x47
 db 0x7a
 db 0xef
 db 0xfa
 db 0xea
 db 0x35
 db 0x31
 db 0xe6
 db 0x3d
 db 0xdc
 db 0xa7
 db 0x13
 db 0x66
 db 0x9f
 db 0x23
 db 0xf4
 db 0x69
 db 0xb1
 db 0x38
 db 0x8d
 db 0x7b
 db 0x6d
 db 0x2e
 db 0xe4
 db 0x13
 db 0x83
 db 0x1c
 db 0xb0
 db 0x28
 db 0x84
 db 0xf
 db 0x6f
 db 0xfe
 db 0xfe
 db 0x69
 db 0xe9
 db 0x33
 db 0x9a
 db 0xcf
 db 0x70
 db 0x76
 db 0x77
 db 0x84
 db 0xdd
 db 0x16
 db 0xa7
 db 0xd1
 db 0x80
 db 0x58
 db 0xa
 db 0xd
 db 0xd3
 db 0x77
 db 0x3b
 db 0xb8
 db 0x8a
 db 0xbf
 db 0xd4
 db 0x3a
 db 0xe7
 db 0x58
 db 0x49
 db 0x56
 db 0x57
 db 0x47
 db 0xbf
 db 0x40
 db 0x7a
 db 0x5a
 db 0xf
 db 0xeb
 db 0xd0
 db 0x86
 db 0x6f
 db 0xad
 db 0x9d
 db 0x16
 db 0x7f
 db 0x1d
 db 0x6e
 db 0x89
 db 0x2a
 db 0x41
 db 0x0
 db 0x65
 db 0xf9
 db 0x8b
 db 0x24
 db 0xcd
 db 0xc5
 db 0xb
 db 0x26
 db 0xf
 db 0x61
 db 0x7d
 db 0x56
 db 0x21
 db 0xbd
 db 0xd1
 db 0x7b
 db 0xcc
 db 0xbc
 db 0x4b
 db 0x53
 db 0x2b
 db 0xf9
 db 0xf0
 db 0x41
 db 0x78
 db 0xd
 db 0xaf
 db 0x1
 db 0x37
 db 0xf0
 db 0x1
 db 0x9c
 db 0xea
 db 0x8c
 db 0xc1
 db 0xb7
 db 0x52
 db 0xcc
 db 0xdd
 db 0x61
 db 0x2e
 db 0x5a
 db 0xb7
 db 0x4f
 db 0x17
 db 0x88
 db 0xca
 db 0xe4
 db 0x44
 db 0x15
 db 0x37
 db 0x6f
 db 0xe
 db 0x27
 db 0xb0
 db 0x86
 db 0x34
 db 0x5f
 db 0x87
 db 0x6b
 db 0x50
 db 0x89
 db 0x7
 db 0x3a
 db 0x15
 db 0xc8
 db 0xf1
 db 0x67
 db 0x95
 db 0xcf
 db 0xc8
 db 0xc3
 db 0x29
 db 0x80
 db 0x12
 db 0x41
 db 0x8
 db 0xdc
 db 0x25
 db 0x4d
 db 0xf1
 db 0x5c
 db 0xbc
 db 0x0
 db 0x83
 db 0x6d
 db 0x86
 db 0xb7
 db 0xcc
 db 0xe
 db 0x22
 db 0x1c
 db 0x97
 db 0x29
 db 0x56
 db 0xac
 db 0xf2
 db 0x48
 db 0x14
 db 0x87
 db 0x17
 db 0xdc
 db 0x4a
 db 0x40
 db 0x5c
 db 0x5c
 db 0x81
 db 0x65
 db 0x38
 db 0xa6
 db 0xb2
 db 0x29
 db 0x2
 db 0x6e
 db 0x29
 db 0x85
 db 0xdb
 db 0xb0
 db 0x3c
 db 0xa8
 db 0xbe
 db 0x5e
 db 0xc4
 db 0x55
 db 0x88
 db 0x1b
 db 0x1
 db 0x7a
 db 0x63
 db 0x15
 db 0x1
 db 0x7a
 db 0xf2
 db 0x4b
 db 0xba
 db 0x4e
 db 0xa7
 db 0x3c
 db 0xb3
 db 0xdf
 db 0xe2
 db 0x65
 db 0x8
 db 0xe5
 db 0xd4
 db 0x32
 db 0x6a
 db 0xaf
 db 0xe2
 db 0xa7
 db 0x57
 db 0xa0
 db 0x5
 db 0x1c
 db 0xf5
 db 0x8d
 db 0x37
 db 0xf6
 db 0x7
 db 0x9a
 db 0xc
 db 0x8
 db 0x14
 db 0xfe
 db 0x53
 db 0xce
 db 0x4c
 db 0xfa
 db 0xa
 db 0x0
 db 0xd9
 db 0xed
 db 0x65
 db 0xe2
 db 0xd2
 db 0x39
 db 0x14
 db 0x3c
 db 0xe9
 db 0xf6
 db 0xe3
 db 0x40
 db 0x96
 db 0xe9
 db 0x5c
 db 0x8b
 db 0x76
 db 0x93
 db 0x81
 db 0x7e
 db 0x2d
 db 0x8d
 db 0x86
 db 0x41
 db 0x8b
 db 0xda
 db 0x10
 db 0xd8
 db 0xd4
 db 0x1a
 db 0xd8
 db 0xae
 db 0x7
 db 0x3d
 db 0x90
 db 0xd9
 db 0x77
 db 0xa4
 db 0x16
 db 0x60
 db 0x9a
 db 0xf9
 db 0xa0
 db 0x30
 db 0xe2
 db 0xfd
 db 0xbb
 db 0x59
 db 0x90
 db 0x3c
 db 0xd7
 db 0xbe
 db 0xca
 db 0x5d
 db 0xff
 db 0x55
 db 0x37
 db 0xf
 db 0x2d
 db 0xc
 db 0x2a
 db 0x5
myidt_base:
 ;My IDTs limit and base 0x20A and 0x20F in data page three
 db 0xa0
 db 0x0
 dd 0xd210
 ;My IDT Starts here at location 0x210 in data page three
idt_start:
;Interrupt vector for type 0
 db 0x10
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 1
 db 0x19
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 2
 db 0x22
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 3
 db 0x2b
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 4
 db 0x34
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 5
 db 0x3d
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 6
 db 0x46
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 7
 db 0x4f
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 8
 db 0x58
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 9
 db 0x3385
 db 0x0
 db 0x0
 db 0xa
;Interrupt vector for type 10
 db 0x3385
 db 0x0
 db 0x0
 db 0xa
;Interrupt vector for type 11
 db 0x3385
 db 0x0
 db 0x0
 db 0xa
;Interrupt vector for type 12
 db 0x61
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 13
 db 0x6a
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 14
 db 0x3385
 db 0x0
 db 0x0
 db 0xa
;Interrupt vector for type 15
 db 0x3385
 db 0x0
 db 0x0
 db 0xa
;Interrupt vector for type 16
 db 0x73
 db 0x33
 db 0x0
 db 0xa
;Interrupt vector for type 17
 db 0x3385
 db 0x0
 db 0x0
 db 0xa
;Interrupt vector for type 18
 db 0x7c
 db 0x33
 db 0x0
 db 0xa
 ;My IDT ends here for (0-18) descriptors
 ;Random data in remaining bytes of IDT
 db 0xba
 db 0x31
 db 0x43
 db 0x4a
 db 0xb
 db 0xba
 db 0xee
 db 0x21
 db 0x1a
 db 0x88
 db 0x1a
 db 0xba
 db 0xb8
 db 0xfd
 db 0xb7
 db 0x73
 db 0x56
 db 0x48
 db 0xaf
 db 0x2d
 db 0x6
 db 0x79
 db 0x8a
 db 0x5
 db 0xcf
 db 0xc2
 db 0x15
 db 0xfc
 db 0xce
 db 0x3f
 db 0x2
 db 0x88
 db 0x70
 db 0x45
 db 0xd2
 db 0x7b
 db 0xff
 db 0xc0
 db 0x9c
 db 0x19
 db 0x48
 db 0xb7
 db 0xd3
 db 0x0
 db 0xb4
 db 0x8b
 db 0x73
 db 0xa
 db 0xd3
 db 0x22
 db 0x37
 db 0xd9
 db 0x9c
 db 0xc1
 db 0xde
 db 0x6b
 db 0x83
 db 0xf3
 db 0x67
 db 0x51
 db 0x32
 db 0x69
 db 0xd9
 db 0xa3
 db 0xae
 db 0xab
 db 0x1e
 db 0xad
 db 0x6b
 db 0xbb
 db 0xc6
 db 0xb3
 db 0x72
 db 0x9a
 db 0xb3
 db 0x26
 db 0x25
 db 0x26
 db 0x30
 db 0xf8
 db 0x49
 db 0x67
 db 0xd1
 db 0xe5
 db 0x28
 db 0xaf
 db 0x50
 db 0xac
 db 0xa3
 db 0xb7
 db 0xfd
 db 0xd5
 db 0x21
 db 0xd7
 db 0x78
 db 0xcf
 db 0x82
 db 0x97
 db 0x7d
 db 0xee
 db 0x52
 db 0x43
 db 0xa1
 db 0xc4
 db 0xdd
 db 0x55
 db 0xea
 db 0x2
 db 0x7b
 db 0x1a
 db 0xfa
 db 0xc4
 db 0x81
 db 0xcb
 db 0xa9
 db 0xa9
 db 0x7b
 db 0xf9
 db 0x55
 db 0x1e
 db 0xb1
 db 0x53
 db 0xf3
 db 0xd2
 db 0x2a
 db 0x6c
 db 0xa1
 db 0xac
 db 0x3
 db 0x1e
 db 0x9a
 db 0x55
 db 0x62
 db 0x3c
 db 0x19
 db 0x3f
 db 0x91
 db 0x3
 db 0x42
 db 0xc
 db 0x1d
 db 0x3c
 db 0xd1
 db 0x9e
 db 0x8
 db 0x7a
 db 0x47
 db 0x83
 db 0x74
 db 0x9d
 db 0xa1
 db 0x25
 db 0xf0
 db 0x94
 db 0xf7
 db 0x1a
 db 0x0
 db 0x98
 db 0xc6
 db 0x3
 db 0xb7
 db 0x61
 db 0x58
 db 0x19
 db 0x9d
 db 0x71
 db 0x58
 db 0x2e
 db 0x74
 db 0x9a
 db 0x3a
 db 0x91
 db 0xd7
 db 0xb
 db 0x2f
 db 0xdf
 db 0x86
 db 0x77
 db 0x62
 db 0xfa
;Exception Handler routines

  excep_0: mov bx,0
           jmp excep_noerr
  excep_1: mov bx,1
           jmp excep_noerr
  excep_2: mov bx,2
           jmp excep_noerr
  excep_3: mov bx,3
           jmp excep_noerr
  excep_4: mov bx,4
           jmp excep_noerr
  excep_5: mov bx,5
           jmp excep_noerr
  excep_6: mov bx,6
           jmp excep_noerr
  excep_7: mov bx,7
           jmp excep_noerr
  excep_8: mov bx,8
           jmp excep_noerr
  excep_12: mov bx,12
           jmp excep_noerr
  excep_13: mov bx,13
           jmp excep_noerr
  excep_16: mov bx,16
           jmp excep_noerr
  excep_18: mov bx,18
           jmp excep_noerr
  excep_default:
  	 mov word [0x2208],0xface
  	 jmp chanSad
  excep_noerr:  
                 and esp,0xffff
                 mov ax,[ss:esp]
                 cmp word [0x2200],0xdead
                 jne near ind_excep
                 cmp bx,16
                 je fp_exception_point
                 mov [0x2200],ax
                 mov [0x2208],bx
                 jmp chanSad
 fp_exception_point: fnclex
                 inc word [0x2ff0]
                 jmp ind_ret2
  ind_excep:   add ax, word [0x2200]
               mov [ss:esp], ax
  	     mov word [0x2200],0xdead
 	     inc word [0x2ff8]
         	  ind_ret2:   iretw
 align 0x1000 
;------------Chanix Ends here------------

